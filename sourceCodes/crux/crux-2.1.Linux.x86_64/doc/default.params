################################################################################
# Sample parameter file
#
# On each line, anything after a '#' will be ignored.
# The format is:
#
# <parameter-name>=<value>
#
################################################################################

# Crux parameter file (generated by Crux version 2.1)
# Full documentation available at http://cruxtoolkit.sourceforge.net/
# comet_version 2015.01 rev. 2
# Everything following the '#' symbol is treated as a comment.

# Path where pin file will be written instead of make-pin.pin.
# It is optional for make-pin
output-file=

# Print version number and quit.
# Available for all crux programs.  On command line use '--version T'.
version=false

# Specify the verbosity of the current processes. Each level prints the
# following messages, including all those at lower verbosity levels: 0-fatal
# errors, 10-non-fatal errors, 20-warnings, 30-information on the progress of
# execution, 40-more progress information, 50-debug info, 60-detailed debug
# info.
# Available for all crux programs.
verbosity=30

# A file containing parameters. 
# Available for all crux programs. Any options specified on the command line
# will override values in the parameter file.
parameter-file=

# Replace existing files if true or fail when trying to overwrite a file if
# false.
# Available for all crux programs.  Applies to parameter file as well as index,
# search, and analysis output files.
overwrite=false

# The minimum length of peptides to consider.
# Used from the command line or parameter file by crux-generate-peptides, crux
# tide-index, and crux generate-decoys.
min-length=6

# The maximum length of peptides to consider.
# Available from command line or parameter file for crux-generate-peptides, crux
# tide-index, and crux generate-decoys. 
max-length=50

# The minimum mass (in Da) of peptides to consider.
# Available from command line or parameter file for crux-generate-peptides, crux
# tide-index, and crux generate-decoys. 
min-mass=200

# The maximum mass (in Da) of peptides to consider.
# Available from command line or parameter file for crux-generate-peptides, crux
# tide-index, and crux generate-decoys. 
max-mass=7200

# The minimum number of peaks a spectrum must have for it to be searched.
# Available for tide-search.
min-peaks=20

# Specify the enzyme used to digest the proteins in silico. Available enzymes
# (with the corresponding digestion rules indicated in parentheses) include
# no-enzyme ([X]|[X]), trypsin ([RK]|{P}), trypsin/p ([RK]|[]), chymotrypsin
# ([FWYL]|{P}), elastase ([ALIV]|{P}), clostripain ([R]|[]), cyanogen-bromide
# ([M]|[]), iodosobenzoate ([W]|[]), proline-endopeptidase ([P]|[]),
# staph-protease ([E]|[]), asp-n ([]|[D]), lys-c ([K]|{P}), lys-n ([]|[K]),
# arg-c ([R]|{P}), glu-c ([DE]|{P}), pepsin-a ([FL]|{P}),
# elastase-trypsin-chymotrypsin ([ALIVKRWFY]|{P}). Specifying --enzyme no-enzyme
# yields a non-enzymatic digest. Warning: the resulting index may be quite
# large.
# Available for crux-generate-peptides, crux tide-index, and crux
# generate-decoys.
enzyme=trypsin

# Specify rules for in silico digestion of protein sequences. Overrides the
# enzyme option. Two lists of residues are given enclosed in square brackets or
# curly braces and separated by a |. The first list contains residues
# required/prohibited before the cleavage site and the second list is residues
# after the cleavage site. If the residues are required for digestion, they are
# in square brackets, '[' and ']'. If the residues prevent digestion, then they
# are enclosed in curly braces, '{' and '}'. Use X to indicate all residues. For
# example, trypsin cuts after R or K but not before P which is represented as
# [RK]|{P}. AspN cuts after any residue but only before D which is represented
# as [X]|[D].
# 
custom-enzyme=

# Specify whether every peptide in the database must have two enzymatic termini
# (full-digest) or if peptides with only one enzymatic terminus are also
# included (partial-digest).
# Available for crux-generate-peptides, crux tide-index, and crux
# generate-decoys.
digestion=full-digest

# Maximum number of missed cleavages per peptide to allow in enzymatic
# digestion.
# Available from command line or parameter file for crux-generate-peptides and
# crux generate-decoys. When used with enzyme=<trypsin|elastase|chymotrypsin>
# includes peptides containing one or more potential cleavage sites.
missed-cleavages=0

# Tolerance used for matching peptides to spectra. Peptides must be within +/-
# 'precursor-window' of the spectrum value. The precursor window units depend
# upon precursor-window-type.
# Available for tide-search and crux-generate-peptides.
precursor-window=3

# Specify the units for the window that is used to select peptides around the
# precursor mass location (mass, mz, ppm). The magnitude of the window is
# defined by the precursor-window option, and candidate peptides must fall
# within this window. For the mass window-type, the spectrum precursor m+h value
# is converted to mass, and the window is defined as that mass +/-
# precursor-window. If the m+h value is not available, then the mass is
# calculated from the precursor m/z and provided charge. The peptide mass is
# computed as the sum of the average amino acid masses plus 18 Da for the
# terminal OH group. The mz window-type calculates the window as spectrum
# precursor m/z +/- precursor-window and then converts the resulting m/z range
# to the peptide mass range using the precursor charge. For the
# parts-per-million (ppm) window-type, the spectrum mass is calculated as in the
# mass type. The lower bound of the mass window is then defined as the spectrum
# mass / (1.0 + (precursor-window / 1000000)) and the upper bound is defined as
# spectrum mass / (1.0 - (precursor-window / 1000000)).
# Available for search-for-xlinks and tide-search.
precursor-window-type=mass

# Specify the parser to use for reading in MS/MS spectra.
# Available for search-for-xlinks.
spectrum-parser=pwiz

# Specify whether, when parsing an MS2 spectrum file, Crux obtains the precursor
# mass information from the "S" line or the "Z" line. 
# Available when spectrum-parser = pwiz.
use-z-line=true

# When creating decoy peptides using decoy-format=shuffle or
# decoy-format=peptide-reverse, this option specifies whether the N-terminal and
# C-terminal amino acids are kept in place or allowed to be shuffled or
# reversed. For a target peptide "EAMPK" with decoy-format=peptide-reverse,
# setting keep-terminal-aminos to "NC" will yield "EPMAK"; setting it to "C"
# will yield "PMAEK"; setting it to "N" will yield "EKPMA"; and setting it to
# "none" will yield "KPMAE".
# Available for tide-index and generate-decoys.
keep-terminal-aminos=NC

# Generate peptides only once, even if they appear in more than one protein.
# Available from command line or parameter file for crux-genereate-peptides.
# Returns one line per peptide when true or one line per peptide per protein
# occurence when false.
unique-peptides=true

# Create in the output directory a text file listing of all the peptides in the
# database, along with their neutral masses, one per line. If decoys are
# generated, then a second file will be created containing the decoy peptides.
# Decoys that also appear in the target database are marked with an asterisk in
# a third column.
# Available for tide-index.
peptide-list=false

# Stop after the specified pre-processing step.
# Available for print-processed-spectra.
stop-after=xcorr

# Specify the output units for processed spectra.
# Available for print-processed-spectra
output-units=bin

# Print peptide sequence.
# Available only for crux-generate-peptides.
output-sequence=false

# Outputs an SQT results file to the output directory. Note that if sqt-output
# is enabled, then compute-sp is automatically enabled and cannot be overridden.
# Available for tide-search.
sqt-output=false

# Output an mzIdentML results file to the output directory.
# Available for tide-search, percolator.
mzid-output=false

# Output a Percolator input (PIN) file to the output directory.
# Available for tide-search.
pin-output=false

# Output a Percolator pout.xml format results file to the output directory.
# Available for percolator.
pout-output=false

# Output a pepXML results file to the output directory.
# Available for tide-search, q-ranker, barista, percolator.
pepxml-output=false

# Output a tab-delimited results file to the output directory.
# Available for tide-search, percolator, q-ranker, barista.
txt-output=true

# Compute the preliminary score Sp for all candidate peptides. Report this score
# in the output, along with the corresponding rank, the number of matched ions
# and the total number of ions. This option is recommended if results are to be
# analyzed by Percolator or Barista. If sqt-output is enabled, then compute-sp
# is automatically enabled and cannot be overridden. Note that the Sp
# computation requires re-processing each observed spectrum, so turning on this
# switch involves significant computational overhead.
# Available for tide-search.
compute-sp=false

# Estimate the parameters of the score distribution for each spectrum by fitting
# to a Weibull distribution, and compute a p-value for each xlink product. This
# option is only available when use-old-xlink=F.
# Currently only implemented for XCORR.
compute-p-values=false

# A single scan number or a range of numbers to be searched. Range should be
# specified as 'first-last' which will include scans 'first' and 'last'.
# The search range x-y is inclusive of x and y.
scan-number=

# Before calculation of the XCorr score, the m/z axes of the observed and
# theoretical spectra are discretized. This parameter specifies the size of each
# bin. The exact formula is floor((x/mz-bin-width) + 1.0 - mz-bin-offset), where
# x is the observed m/z value. For low resolution ion trap ms/ms data 1.0005079
# and for high resolution ms/ms 0.02 is recommended.
# Available for tide-search and xlink-assign-ions.
mz-bin-width=1.0005079

# In the discretization of the m/z axes of the observed and theoretical spectra,
# this parameter specifies the location of the left edge of the first bin,
# relative to mass = 0 (i.e., mz-bin-offset = 0.xx means the left edge of the
# first bin will be located at +0.xx Da).
# Available for tide-search.
mz-bin-offset=0.4

# Include flanking peaks around singly charged b and y theoretical ions. Each
# flanking peak occurs in the adjacent m/z bin and has half the intensity of the
# primary peak.
# Available for the tide-search and search-for-xlinks commands.
use-flanking-peaks=false

# The lowest spectrum m/z to search in the ms2 file.
# Available for tide-search.
spectrum-min-mz=0

# The highest spectrum m/z to search in the ms2 file.
# Available for tide-search.
spectrum-max-mz=1e+09

# The spectrum charges to search. With 'all' every spectrum will be searched and
# spectra with multiple charge states will be searched once at each charge
# state. With 1, 2, or 3 only spectra with that charge state will be searched.
# Used by tide-search.
spectrum-charge=all

# The fileroot string will be added as a prefix to all output file names.
# Used by crux percolator, crux compute-q-values, and crux q-ranker.
fileroot=

# The name of the directory where output files will be created.
# Used by crux compute-q-values, and crux percolator.
output-dir=crux-output

# Include a decoy version of every peptide by shuffling or reversing the target
# sequence. Each peptide is either reversed or shuffled, leaving the N-terminal
# and C-terminal amino acids in place. Note that peptides that appear multiple
# times in the target database are only shuffled once. In reverse mode,
# palindromic peptides are shuffled. Also, if a shuffled peptide produces an
# overlap with the target or decoy database, then the peptide is re-shuffled up
# to 5 times. Note that, despite this repeated shuffling, homopolymers will
# appear in both the target and decoy database.
# 
decoys=peptide-shuffle

# Number of decoy peptides to search for every target peptide searched.Only
# valid for fasta searches when --decoys is not none.
# Use --decoy-location to control where they are returned (which file(s)) and
# --decoys to control how targets are randomized.
num-decoys-per-target=1

# Specify location of decoy search results.
# <string>=target-file|one-decoy-file|separate-decoy-files.
# Applies when decoys is not none.  Use 'target-file' to mix target and decoy
# search results in one file. 'one-decoy-file' will return target results in one
# file and all decoys in another. 'separate-decoy-files' will create as many
# decoy files as num-decoys-per-target.
decoy-location=separate-decoy-files

# Number of psms per spectrum to score with xcorr after preliminary scoring with
# Sp. Set to 0 to score all psms with xcorr.
# For positive values, the Sp (preliminary) score acts as a filter; only high
# scoring psms go on to be scored with xcorr.  This saves some time.  If set to
# 0, all psms are scored with both scores. 
max-rank-preliminary=500

# Specify the number of matches to report for each spectrum.
# Available for tide-search and crux percolator
top-match=5

# When given a unsigned integer value seeds the random number generator with
# that value. When given the string "time" seeds the random number generator
# with the system time.
# Available for all Crux commands.
seed=1

# Specify which isotopes to use in calculating fragment ion mass.
# Used by crux-predict-peptide-ions.
fragment-mass=mono

# Specify the type of isotopic masses to use when calculating the peptide mass.
# Used from command line or parameter file by crux-generate-peptides and crux
# generate-decoys.
isotopic-mass=average

# The minimum number of modifications that can be applied to a single peptide.
# Available for tide-index.
min-mods=0

# The maximum number of modifications that can be applied to a single peptide.
# Available for tide-index.
max-mods=255

# The maximum number of modified amino acids that can appear in one peptide.
# Each aa can be modified multiple times.
# 
max-aas-modified=255

# Specify how sequence modifications are reported in various output files. Each
# modification is reported as a number enclosed in square braces following the
# modified residue; however the number may correspond to one of three different
# masses: (1) 'mod-only' reports the value of the mass shift induced by the
# modification; (2) 'total' reports the mass of the residue with the
# modification (residue mass plus modification mass); (3) 'separate' is the same
# as 'mod-only', but multiple modifications to a single amino acid are reported
# as a comma-separated list of values. For example, suppose amino acid D has an
# unmodified mass of 115 as well as two moifications of masses +14 and +2. In
# this case, the amino acid would be reported as D[16] with 'mod-only', D[131]
# with 'total', and D[14,2] with 'separate'.
# Available for generate-peptides.
mod-mass-format=mod-only

# Set the precision for scores written to sqt and text files.
# Available from parameter file for percolator and compute-q-values.
precision=8

# Set the precision for masses and m/z written to sqt and .txt files.
# Available from parameter file for all commands.
mass-precision=4

# Show search progress by printing every n spectra searched. Set to 0 to show no
# search progress.
# Available for tide-search
print-search-progress=1000

# When given a unsigned integer value seeds the random number generator with
# that value. When given the string "time" seeds the random number generator
# with the system time.
# Available for all percolator
percolator-seed=1

# Output the computed features in tab-delimited text format.
# Available for percolator and q-ranker.
feature-file=false

# Include decoys (PSMs, peptides, and/or proteins) in the XML output.
# Available for crux percolator
decoy-xml-output=false

# Specifies the prefix of the protein names that indicate a decoy.
# Available for percolator
decoy-prefix=decoy_

# Output final weights to a file named "percolator.weights.txt".
# Available for crux percolator
output-weights=false

# Read initial weights from the given file (one per line).
# Available for crux percolator 
input-weights=

# Penalty for mistakes made on positive examples. If this value is not
# specified, then it is set via cross validation over the values {0.1, 1, 10},
# selecting the value that yields the largest number of PSMs identified at the
# q-value threshold set via the --test-fdr parameter.
# Available for crux percolator
c-pos=0.01

# Penalty for mistake made on negative examples. This parameter requires the
# c-pos is set explicitly; otherwise, --c-neg will have no effect. If not
# specified, then this value is set by cross validation over {0.1, 1, 10}.
# Available for crux percolator
c-neg=0

# False discovery rate threshold to define positive examples in training.
# Available for crux percolator
train-fdr=0.01

# False discovery rate threshold used in selecting hyperparameters during
# internal cross-validation and for reporting the final results.
# Availble for crux percolator.
test-fdr=0.01

# Maximum number of iterations for training.
# Available for crux percolator
maxiter=10

# Quicker execution by reduced internal cross-validation.
# Available for crux percolator
quick-validation=false

# Fraction of the negative data set to be used as train set when only providing
# one negative set. The remaining examples will be used as test set.
# Available for crux percolator.
train-ratio=0.6

# In its initial round of training, Percolator uses one feature to induce a
# ranking of PSMs. By default, Percolator will select the feature that produces
# the largest set of target PSMs at a specified FDR threshold (cf. --train-fdr).
# This option allows the user to specify which feature is used for the initial
# ranking, using the name as a string. The name can be preceded by a hyphen
# (e.g. "-XCorr") to indicate that a lower value is better.
# Available for crux percolator
default-direction=

# Use unit normalization (i.e., linearly rescale each PSM's feature vector to
# have a Euclidean length of 1), instead of standard deviation normalization.
# Available for crux percolator.
unitnorm=false

# Measure performance on test set each iteration.
# Available for crux percolator.
test-each-iteration=false

# When set to T, interpret the input file as a PIN file.
# Available for crux percolator.
feature-in-file=false

# Output protein level probability. Must be true to use any of the Fido options.
# Available for crux percolator
protein=false

# Specify the probability with which a present protein emits an associated
# peptide. Set by grid search (see --deepness parameter) if not specified.
# Available for crux percolator if --protein T is set.
alpha=0

# Specify the probability of the creation of a peptide from noise. Set by grid
# search (see --deepness parameter) if not specified.
# Available for crux percolator if --protein T is set.
beta=0

# Specify the prior probability that a protein is present in the sample. Set by
# grid search (see --deepness parameter) if not specified.
# Available for crux percolator if --protein T is set.
gamma=0

# Treate ties as if it were one protein.
# Available for crux percolator.
allow-protein-group=false

# Use pi_0 value when calculating empirical q-values
# Available for crux percolator if --protein T is set.
protein-level-pi0=false

# Output empirical q-values from target-decoy analysis.
# Available for crux percolator if --protein T is set.
empirical-protein-q=false

# Proteins with same probabilities will be grouped.
# Available for crux percolator if --protein T is set.
group-proteins=false

# Proteins with very low scores (~0.0) will not be pruned which means that if a
# peptide with a very low score matches two proteins, when we prune the peptide,
# it will be duplicated to generate two new protein groups.
# Available for crux percolator if --protein T is set.
no-separate-proteins=false

# Peptides with low score will not be pruned before calculating protein
# probabilities. 
# Available for crux percolator if --protein T is set.
no-prune-proteins=false

# Set depth of the grid search for alpha, beta and gamma estimation.
# Available for crux percolator if --protein T is set.
deepness=0

# Reduce the tree of proteins (removing low scored proteins) in order to
# estimate alpha, beta, and gamma faster.
# Available for crux percolator if --protein T is set.
reduce-tree-in-gridsearch=false

# Use target-decoy competition to compute peptide probabilities.
# Available for crux percolator
post-processing-tdcn=false

# Q-value threshold that will be used in the computation of the MSE and ROC AUC
# score in the grid search.
# Available for crux percolator if --protein T is set.
grid-search-mse-threshold=0.05

# Proteins with a very low score (<0.001) will be truncated (assigned 0.0
# probability.
# Available for crux percolator if --protein T is set.
truncation=false

# Uses protein group level inference, each cluster of proteins is either present
# or not, therefore when grouping proteins discard all possible combinations for
# each group.
# Available for crux percolator if --protein T is set.
protein-group-level-inference=false

# By default, Percolator will examine the learned weights for each feature, and
# if the weight appears to be problematic, then percolator will discard the
# learned weights and instead employ a previously trained, static score vector.
# This switch allows this error checking to be overriden.
# Available for crux percolator.
static-override=false

# Use retention time features calculated as in "Improving tandem mass spectrum
# identification using peptide retention time prediction across diverse
# chromatography conditions" by Klammer AA, Yi X, MacCoss MJ and Noble WS.
# (Analytical Chemistry. 2007 Aug 15;79(16):6111-8.).
# Available for crux percolator
klammer=false

# Include description of correct features.
# Avilable for crux percolator
doc=-1

# Do not remove redundant peptides; keep all PSMs and exclude peptide level
# probability.
# Available for crux percolator
only-psms=false

# Include a decoy version of every peptide by shuffling or reversing the target
# sequence or protein. In shuffle or peptide-reverse mode, each peptide is
# either reversed or shuffled, leaving the N-terminal and C-terminal amino acids
# in place. Note that peptides appear multiple times in the target database are
# only shuffled once. In peptide-reverse mode, palindromic peptides are
# shuffled. Also, if a shuffled peptide produces an overlap with the target or
# decoy database, then the peptide is re-shuffled up to 5 times. Note that,
# despite this repeated shuffling, homopolymers will appear in both the target
# and decoy database. The protein-reverse mode reverses the entire protein
# sequence, irrespective of the composite peptides.
# Available for tide-index
decoy-format=shuffle

# When computing the mass of a peptide, use monoisotopic masses rather than
# average masses.
# Available for tide-index
monoisotopic-precursor=true

# Expression for static and variable mass modifications to include. Specify a
# comma-separated list of modification sequences of the form:
# C+57.02146,2M+15.9949,1STY+79.966331,...
# Available for tide-index
mods-spec=C+57.02146

# Specifies N-terminal static and variable mass modifications on peptides.
# Specify a comma-separated list of N-terminal modification sequences of the
# form: 1E-18.0106,C-17.0265
# Available for tide-index
nterm-peptide-mods-spec=

# Specifies C-terminal static and variable mass modifications on peptides.
# Specify a comma-separated list of C-terminal modification sequences of the
# form: X+21.9819
# Available for tide-index
cterm-peptide-mods-spec=

# Specify the name of the file where the binarized fragmentation spectra will be
# stored. Subsequent runs of crux tide-search will execute more quickly if
# provided with the spectra in binary format. The filename is specified relative
# to the current working directory, not the Crux output directory (as specified
# by --output-dir). This option is not valid if multiple input spectrum files
# are given.
# Available for tide-search
store-spectra=

# Enable the calculation of exact p-values for the XCorr score. Calculation of
# p-values increases the running time but increases the number of
# identifications at a fixed confidence threshold. The p-values will be reported
# in a new column with header "exact p-value", and the "xcorr score" column will
# be replaced with a "refactored xcorr" column. Note that, currently, p-values
# can only be computed when the mz-bin-width parameter is set to its default
# value. Variable and static mods are allowed on non-terminal residues in
# conjunction with p-value computation, but currently only static mods are
# allowed on the N-terminus, and no mods on the C-terminus.
# Available for tide-search
exact-p-value=false

# When providing a FASTA file as the index, the generated binary index will be
# stored at the given path. This option has no effect if a binary index is
# provided as the index.
# Available for tide-search
store-index=

# When set to T, target and decoy search results are reported in a single file,
# and only the top-scoring N matches (as specified via --top-match) are reported
# for each spectrum, irrespective of whether the matches involve target or decoy
# peptides.
# Available for tide-search
concat=false

# Include the file column in tab-delimited output.
# Available for tide-search
file-column=true

# If true, all peaks around the precursor m/z will be removed, within a range
# specified by the --remove-precursor-tolerance option.
# Available for tide-search.
remove-precursor-peak=false

# This parameter specifies the tolerance (in Th) around each precursor m/z that
# is removed when the --remove-precursor-peak option is invoked.
# Available for print-processed spectra and tide-search.
remove-precursor-tolerance=1.5

# When set to T, for each protein that begins with methionine, tide-index will
# put two copies of the leading peptide into the index, with and without the
# N-terminal methionine.
# Available for tide-index.
clip-nterm-methionine=false

# Controls whether neutral loss ions are considered in the search. Two types of
# neutral losses are included and are applied only to singly charged b- and
# y-ions: loss of ammonia (NH3, 17.0086343 Da) and H2O (18.0091422). Each
# neutral loss peak has intensity 1/5 of the primary peak
# Available for tide-search.
use-neutral-loss-peaks=true

# The maximum charge state of a spectra to consider in search.
# Available for tide-search.
max-precursor-charge=5

# Carries out a peptide-centric search. For each peptide the top-scoring spectra
# are reported, in contrast to the standard spectrum-centric search where the
# top-scoring peptides are reported. Note that in this case the "xcorr rank"
# column will contain the rank of the given spectrum with respect to the given
# candidate peptide, rather than vice versa (which is the default).
# Available for tide-search.
peptide-centric-search=false

# Analysis begins with a pre-processsing step that creates a set of lookup
# tables which are then used during training. Normally, these lookup tables are
# deleted at the end of the analysis, but setting this option to T prevents the
# deletion of these tables. Subsequently, analyses can be repeated more
# efficiently by specifying the --re-run option.
# Available for q-ranker and barista.
skip-cleanup=false

# Re-run a previous analysis using a previously computed set of lookup tables.
# For this option to work, the --skip-cleanup option must have been set to true
# when the program was run the first time.
# Available for q-ranker and barista.
re-run=

# Use an enriched feature set, including separate features for each ion type.
# Available for q-ranker and barista.
use-spec-features=true

# If the target and decoy searches were run separately, rather than using a
# concatenated database, then the program will assume that the database search
# results provided as a required argument are from the target database search.
# This option then allows the user to specify the location of the decoy search
# results. Like the required arguments, these search results can be provided as
# a single file, a list of files or a directory. However, the choice (file, list
# or directory) must be consistent for the MS2 files and the target and decoy
# tab-delimited files. Also, if the MS2 and tab-delimited files are provided in
# directories, then Q-ranker will use the MS2 filename (foo.ms2) to identify
# corresponding target and decoy tab-delimited files with names like
# foo*.target.txt and foo*.decoy.txt. This naming convention allows the target
# and decoy txt files to reside in the same directory.
# Available for q-ranker and barista.
separate-searches=

# Specify that the search results are provided as lists of files, rather than as
# individual files.
# Available for barista and percolator.
list-of-files=false

# Specifies whether to do optimization at the protein, peptide or psm level.
# Available for barista.
optimization=protein

# Specify the method used to estimate q-values: the mix-max procedure or
# target-decoy competition.
# Used by assign-confidence.
estimation-method=tdc

# Adjust the score using the Sidak adjustment and reports them in a new column
# in the output file. Note that this adjustment only makes sense if the given
# scores are p-values, and that it requires the presence of the "distinct
# matches/spectrum" feature for each PSM.
# Used by assign-confidence.
sidak=false

# Applied for spectrum-centric search. Eliminates any PSMS for which there
# exists a better scoring PSM involving the same peptide. This option is
# incompatible with the mix-max procedure.
# Used by assign-confidence.
peptide-level=false

# Specify the column (for tab-delimited input) or tag (for XML input) used as
# input to the q-value estimation procedure.
# Used by assign-confidence.
score=

# Specify the semantics of the score, i.e., whether a smaller value implies a
# better match or vice versa. Specify this parameter T for "exact p-value" and F
# for "xcorr score".
# Used by assign-confidence.
smaller-is-better=false

# The q-value threshold used by cascade search. Spectra identified with q-value
# less than this threshold in one search will be excluded from all subsequent
# searches.
# Used by Cascade-Search
q-value-threshold=0.01

# Predict the specified primary ion series. 'a' indicates a-ions only, 'b'
# indicates b-ions only, 'y' indicates y-ions only, 'by' indicates both b and y,
# 'bya' indicates b, y, and a.
# Only available for crux-predict-peptide-ions. Set automatically to 'by' for
# searching.
primary-ions=by

# Predict the precursor ions, and all associated ions (neutral losses, multiple
# charge states) consistent with the other specified options.
# Only available for crux-predict-peptide-ions.
precursor-ions=false

# Predict the given number of isotope peaks (0|1|2).
# Only available for crux-predict-peptide-ion.  Automatically set to 0 for Sp
# scoring and 1 for xcorr scoring.
isotope=0

# Predict flanking peaks for b- and y ions.
# Only available for crux-predict-peptide-ion.
flanking=false

# Predict theoretical ions up to max charge state (1, 2, ... ,6) or up to the
# charge state of the peptide ("peptide"). If the max-ion-charge is greater than
# the charge state of the peptide, then the maximum is the peptide charge. 
# Available for predict-peptide-ions and search-for-xlinks. Set to 'peptide' for
# search.
max-ion-charge=peptide

# Include among the predicted peaks b/y ions with up to n losses of nh3. For
# example, for --nh3 2, predict a peak for each b- and y-ion with the loss of
# one nh3 group and predict a second peak for each b- and y-ion with the loss of
# two nh3 groups. These peaks will have 1 and 2, respectively, in the NH3 column
# of the output.
# Only available for crux-predict-peptide-ions.
nh3=0

# Include in the predicted peaks, b/y ions with the loss of 1 to n water
# molecules. See --nh3 for an example.
# Only available for crux-predict-peptide-ions.
h2o=0

# The name of the file in FASTA format.
# Option for spectral-counts
protein-database=

# Type of analysis to make on the match results: (RAW|NSAF|dNSAF|SIN|EMPAI).
# With exception of the RAW metric, the database of sequences need to be
# provided using --protein-database.
# Available for spectral-counts.  RAW is raw counts, NSAF is Normalized Spectral
# Abundance Factor, dNSAF is Distributed Spectral Abundance Factor, SIN is
# Spectral Index Normalized and EMPAI is Exponentially Modified Protein
# Abundance Index
measure=NSAF

# Ignore peptides that map to multiple proteins.
# Available for spectral-counts.
unique-mapping=false

# Quantification at protein or peptide level.
# Available for spectral-counts and either NSAF and SIN.
quant-level=protein

# Perform a parsimony analysis on the proteins, and report a "parsimony rank"
# column in the output file. This column contains integers indicating the
# protein's rank in a list sorted by spectral counts. If the parsimony analysis
# results in two proteins being merged, then their parsimony rank is the same.
# In such a case, the rank is assigned based on the largest spectral count of
# any protein in the merged meta-protein. The "simple" parsimony algorithm only
# merges two proteins A and B if the peptides identified in protein A are the
# same as or a subset of the peptides identified in protein B. The "greedy"
# parsimony algorithm does additional merging, using the peptide q-values to
# greedily assign each peptide to a single protein.
# Available for spectral-counts.
parsimony=none

# Determines what type of threshold to use when filtering matches. none : read
# all matches, qvalue : use calculated q-value from percolator or q-ranker,
# custom : use --custom-threshold-name and --custom-threshold-min parameters.
# used for crux spectral-counts
threshold-type=qvalue

# Only consider PSMs with a threshold value. By default, q-values are
# thresholded using a specified threshold value. This behavior can be changed
# using the --custom-threshold and --threshold-min parameters.
# Available for spectral-counts. All PSMs with higher (or lower) than this will
# be ignored.
threshold=0.01

# Specify which field to apply the threshold to. The direction of the threshold
# (<= or >=) is governed by --custom-threshold-min. By default, the threshold
# applies to the q-value, specified by "percolator q-value", "q-ranker q-value",
# "decoy q-value (xcorr)", or "barista q-value".
# Available for spectral-counts.
custom-threshold-name=

# When selecting matches with a custom threshold, custom-threshold-min
# determines whether to filter matches with custom-threshold-name values that
# are greater-than or equal (F) or less-than or equal (T) than the threshold.
# Available for spectral-counts.
custom-threshold-min=true

# MS2 file corresponding to the psm file. Required to measure the SIN. Ignored
# for NSAF, dNSAF and EMPAI.
# Available for spectral-counts with measure=SIN.
input-ms2=

# Use mzid's passThreshold attribute to filter matches.
# Used when parsing mzIdentML files.
mzid-use-pass-threshold=false

# Change the mass of all amino acids 'A' by the given amount.
# 
A=0

# Change the mass of all amino acids 'C' by the given amount.
# 
C=57.021464

# Change the mass of all amino acids 'D' by the given amount.
# 
D=0

# Change the mass of all amino acids 'E' by the given amount.
# 
E=0

# Change the mass of all amino acids 'F' by the given amount.
# 
F=0

# Change the mass of all amino acids 'G' by the given amount.
# 
G=0

# Change the mass of all amino acids 'H' by the given amount.
# 
H=0

# Change the mass of all amino acids 'I' by the given amount.
# 
I=0

# Change the mass of all amino acids 'K' by the given amount.
# 
K=0

# Change the mass of all amino acids 'L' by the given amount.
# 
L=0

# Change the mass of all amino acids 'M' by the given amount.
# 
M=0

# Change the mass of all amino acids 'N' by the given amount.
# 
N=0

# Change the mass of all amino acids 'P' by the given amount.
# 
P=0

# Change the mass of all amino acids 'Q' by the given amount.
# 
Q=0

# Change the mass of all amino acids 'R' by the given amount.
# 
R=0

# Change the mass of all amino acids 'S' by the given amount.
# 
S=0

# Change the mass of all amino acids 'T' by the given amount.
# 
T=0

# Change the mass of all amino acids 'V' by the given amount.
# 
V=0

# Change the mass of all amino acids 'W' by the given amount.
# 
W=0

# Change the mass of all amino acids 'Y' by the given amount.
# 
Y=0

# Rather than the spectrum, output summary statistics to standard output. Each
# statistic is placed on a separate line, in the format <name>:<value> (e.g.
# "TIC:1000.0").
# Avaliable only for crux-get-ms2-spectrum.  Does not affect contents of the
# output file.
stats=false

# Print the theoretical spectrum
# Available for xlink-predict-peptide-ions.
print-theoretical-spectrum=false

# Use the old version of xlink-searching algorithm. When false, a new version of
# the code is run. The new version supports variable modifications and can
# handle more complex databases. This new code is still in development and
# should be considered a beta release.
# Available for search-for-xlinks program.
use-old-xlink=true

# Provides a list of isotopic windows to search. For example, -1,0,1 will search
# in three disjoint windows: (1) precursor_mass - neutron_mass +/- window, (2)
# precursor_mass +/- window, and (3) precursor_mass + neutron_mass +/- window.
# The window size is defined from the precursor-window and precursor-window-type
# parameters. This option is only available when use-old-xlink=F.
# Used for crux search-for-xlinks
isotope-windows=0

# Include linear peptides in the search.
# Available for crux search-for-xlinks program.
xlink-include-linears=true

# Include dead-end peptides in the search.
# Available for crux search-for-xlinks program.
xlink-include-deadends=true

# Include self-loop peptides in the search.
# Available for crux search-for-xlinks program.
xlink-include-selfloops=true

# Include intra-protein cross-link candiates within the search.
# Available for crux search-for-xlinks program.
xlink-include-intra=true

# Include inter-protein cross-link candidates within the search.
# Available for crux search-for-xlinks program.
xlink-include-inter=true

# Include crosslink candidates that are both inter and intra.
# Available for crux search-for-xlinks program.
xlink-include-inter-intra=true

# List of amino acids for which the cross-linker can prevent cleavage. This
# option is only available when use-old-xlink=F.
# Available for search-for-xlinks program.
xlink-prevents-cleavage=K

# Specify the maximum number of modifications allowed on a crosslinked peptide.
# This option is only available when use-old-xlink=F.
# Available for crux search-for-xlinks
max-xlink-mods=0

# Search decoy peptides within +/- precursor-window-weibull of the precursor
# mass. The resulting scores are used only for fitting the Weibull distribution
# Available for crux search-for-xlinks. 
precursor-window-weibull=20

# Window type to use in conjunction with the precursor-window-weibull parameter.
# Available for crux search-for-xlinks
precursor-window-type-weibull=mass

# Keep shuffling and collecting XCorr scores until the minimum number of points
# for weibull fitting (using targets and decoys) is achieved.
# Available for crux search-for-xlinks
min-weibull-points=4000

# Determines which spectral feature detection algorithm to use. Different
# results are possible with each algorithm, and there are pros and cons to each.
# Available for crux hardklor
hardklor-algorithm=version1

# Defines alternative averagine models in the analysis that incorporate
# additional atoms and/or isotopic enrichments. Modifications are represented as
# text strings. Inclusion of additional atoms in the model is done using by
# entering an atomic formula, such as: PO2 or Cl. Inclusion of isotopic
# enrichment to the model is done by specifying the percent enrichment (as a
# decimal) followed by the atom being enriched and an index of the isotope. For
# example, 0.75H1 specifies 75% enrichment of the first heavy isotope of
# hydrogen. In other words, 75% deuterium enrichment. Two or more modifications
# can be combined into the same model, and separated by spaces: B2 0.5B1
# Available for crux hardklor
averagine-mod=

# Boxcar averaging is a sliding window that averages n adjacent spectra prior to
# feature detection. Averaging generally improves the signal-to-noise ratio of
# features in the spectra, as well as improving the shape of isotopic envelopes.
# However, averaging will also change the observed peak intensities. Averaging
# with too wide a window will increase the occurrence of overlapping features
# and broaden the chromatographic profiles of observed features. The number
# specified is the total adjacent scans to be combined, centered on the scan
# being analyzed. Therefore, an odd number is recommended to center the boxcar
# window. For example, a value of 3 would produce an average of the scan of
# interest, plus one scan on each side. A value of 0 disables boxcar averaging.
# Available for crux hardklor
boxcar-averaging=0

# This parameter is only functional when boxcar-averaging is used. The filter
# will remove any peaks not seen in n scans in the boxcar window. The effect is
# to reduce peak accumulation due to noise and reduce chromatographic broadening
# of peaks. Caution should be used as over-filtering can occur. The suggested
# number of scans to set for filtering should be equal to or less than the
# boxcar-averaging window size. A value of 0 disables filtering.
# Available for crux hardklor
boxcar-filter=0

# This parameter is only functional when boxcar-filter is used. The value
# specifies the mass tolerance in ppm for declaring a peak the same prior to
# filtering across all scans in the boxcar window.
# Available for crux hardklor
boxcar-filter-ppm=10

# Indicates whether the data contain profile or centroided peaks.
# Available for crux hardklor
centroided=false

# Choose the charge state determination method.
# Available for crux hardklor
cdm=Q

# Specifies the minimum charge state to allow when finding spectral features. It
# is best to set this value to the lowest assumed charge state to be present. If
# set higher than actual charge states that are present, those features will not
# be identified or incorrectly assigned a different charge state and mass.
# Available for crux hardklor
min-charge=1

# Specifies the maximum charge state to allow when finding spectral features. It
# is best to set this value to a practical number (i.e. do not set it to 20 when
# doing a tryptic shotgun analysis). If set higher than actual charge states
# that are present, the algorithm will perform significantly slower without any
# improvement in results.
# Available for crux hardklor
max-charge=5

# Sets the correlation threshold (cosine similarity) for accepting each
# predicted feature.
# Available for crux hardklor
corr=0.85

# Sets the depth of combinatorial analysis. For a given set of peaks in a
# spectrum, search for up to this number of combined peptides that explain the
# observed peaks. The analysis stops before depth is reached if the current
# number of deconvolved features explains the observed peaks with a correlation
# score above the threshold defined with the correlation parameter.
# Available for crux hardklor
depth=3

# When reporting each feature, report abundance as the sum of all isotope peaks.
# The value reported is the estimate of the correct peak heights based on the
# averagine model scaled to the observed peak heights.
# Available for crux hardklor
distribution-area=false

# Specifies an ASCII text file that defines symbols for the periodic table.
# Available for crux hardklor
hardklor-data-file=

# Indicates the type of instrument used to collect data. This parameter,
# combined with the resolution parameter, define how spectra will be centroided
# (if you provide profile spectra) and the accuracy when aligning observed peaks
# to the models.
# Available for crux hardklor
instrument=fticr

# Specifies an ASCII text file that can be read to override the natural isotope
# abundances for all elements.
# Available for crux hardklor
isotope-data-file=

# Specifies the maximum number of models to build for a set of peaks being
# analyzed. Regardless of the setting, the number of models will never exceed
# the number of peaks in the current set. However, as many of the low abundance
# peaks are noise or tail ends of distributions, defining models for them is
# detrimental to the analysis.
# Available for crux hardklor
max-features=10

# Filters the spectra prior to analysis for the requested MS/MS level. For
# example, if the data contain MS and MS/MS spectra, setting mzxml-filter = 1
# will analyze only the MS scan events. Setting mzxml-filter = 2 will analyze
# only the MS/MS scan events.
# Available for crux hardklor
mzxml-filter=1

# Constrains the search in each spectrum to signals below this value in
# Thomsons. Setting to 0 disables this feature.
# Available for crux hardklor
mz-max=0

# Constrains the search in each spectrum to signals above this value in
# Thomsons. Setting to 0 disables this feature.
# Available for crux hardklor
mz-min=0

# Only used when algorithm = version1. Defines the maximum window size in
# Thomsons to analyze when deconvolving peaks in a spectrum into features.
# Available for crux hardklor
mz-window=4

# Specifies the resolution of the instrument at 400 m/z for the data being
# analyzed.
# Available for crux hardklor
resolution=100000

# Used to restrict analysis to spectra with scan numbers below this parameter
# value. A value of 0 disables this feature.
# Available for crux hardklor
scan-range-max=0

# Used to restrict analysis to spectra with scan numbers above this parameter
# value. A value of 0 disables this feature.
# Available for crux hardklor
scan-range-min=0

# Set the sensitivity level. There are four levels: 0 (low), 1 (moderate), 2
# (high), and 3 (max). Increasing the sensitivity will increase computation
# time, but will also yield more isotope distributions.
# Available for crux hardklor
sensitivity=2

# Filters spectra to remove peaks below this signal-to-noise ratio prior to
# finding features.
# Available for crux hardklor
signal-to-noise=1

# Uses Savitzky-Golay smoothing on profile peak data prior to centroiding the
# spectra. This parameter is recommended for low resolution spectra only.
# Smoothing data causes peak depression and broadening. Only use odd numbers for
# the degree of smoothing (as it defines a window centered on each data point).
# Higher values will produce smoother peaks, but with greater depression and
# broadening. Setting this parameter to 0 disables smoothing.
# Available for crux hardklor
smooth=0

# Set the signal-to-noise window length (in m/z). Because noise may be
# non-uniform across a spectrum, this value adjusts the segment size considered
# when calculating a signal-over-noise ratio.
# Available for crux hardklor
sn-window=250

# Applies the lowest noise threshold of any sn_window across the entire mass
# range for a spectrum. Setting this parameter to 0 turns off this feature, and
# different noise thresholds will be used for each local mass window in a
# spectrum.
# Available for crux hardklor
static-sn=true

# Ignore PPIDs that persist for longer than this length of time in the MS1
# spectra. The unit of time is whatever unit is used in your data file (usually
# minutes). These PPIDs are considered contaminants.
# Available for crux bullseye
max-persist=2

# When true, require an exact match (as defined by --exact-tolerance) between
# the center of the precursor isolation window in the MS2 scan and the base
# isotopic peak of the PPID. If this option is set to false and no exact match
# is observed, then attempt to match using a wider m/z tolerance. This wider
# tolerance is calculated using the PPID's monoisotopic mass and charge (the
# higher the charge, the smaller the window).
# Available for crux bullseye
exact-match=false

# Allowed gap size when checking for PPIDs across consecutive MS1 scans.
# Available for crux bullseye
gap-tolerance=1

# Only consider PPIDs above this minimum mass in daltons.
# Available for crux bullseye
bullseye-min-mass=600

# Only consider PPIDs below this maximum mass in daltons.
# Available for crux bullseye
bullseye-max-mass=8000

# Set the tolerance (+/-ppm) for --exact-match.
# Available for crux bullseye
exact-tolerance=10

# Set the mass tolerance (+/-ppm) for finding PPIDs in consecutive MS1 scans.
# Available for crux bullseye
persist-tolerance=10

# Total number of MS1 scans over which a PPID must be observed to be considered
# real. Gaps in persistence are allowed by setting --gap-tolerance.
# Available for crux bullseye
scan-tolerance=3

# Set the tolerance (+/-units) around the retention time over which a PPID can
# be matches to the MS2 spectrum. The unit of time is whatever unit is used in
# your data file (usually minutes).
# Available for crux bullseye
retention-tolerance=0.5

# The format to write the output spectra to. If empty, the spectra will be
# output in the same format as the MS2 input.
# Available for crux bullseye
spectrum-format=

# Sort in ascending (T) or descending (F) order.
# Available for sort-by-column
ascending=true

# Specify the input and output delimiter to use when processing the delimited
# file.  The argument can be either a single character or the keyword 'tab.'
# Available for the delimited utility programs.
delimiter=tab

# Print the header line of the file, in addition to the columns that match.
# Available for crux extract-columns and extract-rows
header=true

# Specifies the data type of the column, either an integer (int), a floating
# point number (real), or a string.
# Available for crux extract-rows
column-type=string

# Specify the operator that is used to compare an entry in the specified column
# to the value given on the command line.
# Available for crux extract-rows
comparison=eq

# Run the Bullseye algorithm on the given MS data, using it to assign
# high-resolution precursor values to the MS/MS data. If a spectrum file ends
# with .ms2 or .cms2, matching .ms1/.cms1 files will be used as the MS1 file.
# Otherwise, it is assumed that the spectrum file contains both MS1 and MS2
# scans.
# Available for crux pipeline
bullseye=false

# Specify which search engine to use.
# Available for crux pipeline
search-engine=tide-search

# Specify which post-processor to apply to the search results.
# Available for crux pipeline
post-processor=percolator

# [[nohtml:<mass change>:<aa list>:<max per peptide>:<prevents
# cleavage>:<prevents cross-link>]][[html:&lt;mass change&gt;:&lt;aa
# list&gt;:&lt;max per peptide&gt;:&lt;prevents
# cleavage&gt;:&lt;prevents cross-link&gt;]]. Consider modifications on
# any amino acid in aa list with at most max-per-peptide in one peptide.
# This parameter may be included with different values multiple times so
# long as the total number of mod, cmod, and nmod parameters does not
# exceed 11. The prevents cleavage and prevents cross-link are T/F
# optional arguments for describing whether the modification prevents
# enzymatic cleavage of cross-linking respectively. This option is only
# available when use-old-xlink=F.
# Available from parameter file for crux-generate-peptides and the same
# must be used for crux compute-q-value.
mod=NO MODS

# Specify a variable modification to apply to N-terminus of peptides. 
# <mass change>:<max distance from protein n-term (-1 for no max)>
# Available from parameter file for crux-generate-peptides and the same
# must be used for crux compute-q-value.
nmod=NO MODS

# Specify a variable modification to apply to C-terminus of peptides.
# <mass change>:<max distance from protein c-term (-1 for no max)>.
# Available from parameter file for crux-generate-peptides and the same
# must be used for crux compute-q-value.
cmod=NO MODS

#################
#Comet Parameters
#################
# 0=no, 1=concatenated search, 2=separate search.
# option for Comet only
decoy_search=0

# 0=poll CPU to set num threads; else specify num threads directly (max 32).
# option for Comet only
num_threads=0

# specifies the suffix string that is appended to the base output name for the
# pep.xml, pin.xml, txt and sqt output files.
# Available for comet.
output_suffix=

# Controls the mass tolerance value.  The mass tolerance is set at +/- the
# specified number i.e. an entered value of "1.0" applies a -1.0 to +1.0
# tolerance. The units of the mass tolerance is controlled by the parameter
# "peptide_mass_units". 
# option for Comet only
peptide_mass_tolerance=3

# 0=amu, 1=mmu, 2=ppm.
# option for Comet only
peptide_mass_units=0

# 0=average masses, 1=monoisotopic masses.
# option for Comet only
mass_type_parent=1

# 0=average masses, 1=monoisotopic masses.
# option for Comet only
mass_type_fragment=1

# 0=off, 1=on -1/0/1/2/3 (standard C13 error), 2=-8/-4/0/4/8 (for +4/+8
# labeling).
# option for Comet only
isotope_error=0

# Specify a search enzyme from the end of the parameter file.
# option for Comet only
search_enzyme_number=1

# valid values are 1 (semi-digested), 2 (fully digested), 8 N-term, 9 C-term.
# option for Comet only
num_enzyme_termini=2

# maximum value is 5; for enzyme search
# option for Comet only
allowed_missed_cleavage=2

# binning to use on fragment ions.
# option for Comet only
fragment_bin_tol=1.000507

# offset position to start the binning (0.0 to 1.0).
# option for Comet only
fragment_bin_offset=0.4

# 0=default peak shape, 1=M peak only.
# option for Comet only
theoretical_fragment_ions=1

# Controls whether or not A-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_A_ions=0

# Controls whether or not B-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_B_ions=1

# Controls whether or not C-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_C_ions=0

# Controls whether or not X-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_X_ions=0

# Controls whether or not Y-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_Y_ions=1

# Controls whether or not Z-ions are considered in the search (0 - no, 1 - yes).
# option for Comet only
use_Z_ions=0

# 0=no, 1= yes to consider NH3/H2O neutral loss peak.
# option for Comet only
use_NL_ions=1

# Controls whether or not internal sparse matrix data representation is used.
# option for Comet only
use_sparse_matrix=0

# 0=no, 1=yes  write sqt file.
# option for Comet only
output_sqtfile=0

# 0=no, 1=yes  write pep.xml file.
# option for Comet only
output_pepxmlfile=1

# 0=no, 1=yes write percolator file.
# option for Comet only
output_percolatorfile=0

# 0=no, 1=yes  write tab-delimited text file.
# option for Comet only
output_txtfile=1

# 0=no, 1=yes  write .out files.
# option for Comet only
output_outfiles=0

# 0=no, 1=yes to replace Sp with expect in out & sqt.
# option for Comet.
print_expect_score=1

# num peptide results to show.
# option for Comet.
num_output_lines=5

# 0=no, 1=yes for out files only.
# option for Comet.
show_fragment_ions=0

# Sample enzyme which is possibly different than the one applied to the search.
# Used to calculate NTT & NMC in pepXML output.
# option for Comet. 
sample_enzyme_number=1

# start and scan scan range to search; 0 as 1st entry ignores parameter.
# option for Comet
scan_range=0 0

# precursor charge range to analyze; does not override mzXML charge; 0 as 1st
# entry ignores parameter.
# option for Comet.
precursor_charge=0 0

# MS level to analyze, valid are levels 2 or 3.
# option for Comet. 
ms_level=2

# Specifies which scan types are searched.
# option for Comet. 
activation_method=ALL

# MH+ peptide mass range to analyze.
# option for Comet.
digest_mass_range=600.0 5000.0

# number of search hits to store internally.
# option for Comet.
num_results=50

# for '.out' file output only, 0=search everything again, 1=don't search if .out
# exists.
# option for Comet
skip_researching=1

# set maximum fragment charge state to analyze (allowed max 5).
# option for Comet
max_fragment_charge=3

# set maximum precursor charge state to analyze (allowed max 9).
# option for Comet
max_precursor_charge=6

# 0=proteinDB, 1-6, 7=forward three, 8=reverse three, 9=all six.
# option for Comet
nucleotide_reading_frame=0

# 0=leave sequences as-is; 1=also consider sequence w/o N-term methionine.
# option for Comet
clip_nterm_methionine=0

# max. # of spectra to search at a time; 0 to search the entire scan range in
# one loop.
# option for Comet
spectrum_batch_size=0

# minimum num. of peaks in spectrum to search.
# option for Comet
minimum_peaks=10

# minimum intensity value to read in.
# option for comet. 
minimum_intensity=0

# 0=no, 1=yes, 2=all charge reduced precursor peaks (for ETD).
# option for Comet. 
remove_precursor_peak=0

# +- Da tolerance for precursor removal.
# option for Comet. 
remove_precursor_tolerance=1.5

# for iTRAQ/TMT type data; will clear out all peaks in the specified m/z range.
# option for Comet
clear_mz_range=0.0 0.0

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod01=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod02=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod03=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod04=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod05=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod06=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod07=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod08=

# Up to 9 variable modifications are supported; format: "<mass> <residues>
# <0=variable/1=binary> <max mods per a peptide>" e.g. 79.966331 STY 0 3.
# option for Comet
variable_mod09=

# controls whether the analyzed peptides must contain at least one variable
# modification.
# option for Comet
require_variable_mod=0

# Specifies the total/maximum number of residues that can be modified in a
# peptide.
# option for Comet
max_variable_mods_in_peptide=5

# specifies the whether to override existing precursor charge state information
# when present in the files with the charge range specified by the
# "precursor_charge" parameter.
# option for Comet
override_charge=0

# Specifiy a static modification to the c-terminus of all peptides.
# option for Comet
add_Cterm_peptide=0

# Specify a static modification to the n-terminus of all peptides.
# option for Comet
add_Nterm_peptide=0

# Specify a static modification to the c-terminal peptide of each protein.
# option for Comet
add_Cterm_protein=0

# Specify a static modification to the n-terminal peptide of each protein.
# option for Comet
add_Nterm_protein=0

# Specify a static modification to the residue A.
# option for Comet
add_A_alanine=0

# Specify a static modification to the residue B.
# option for Comet
add_B_user_amino_acid=0

# Specify a static modification to the residue C.
# option for Comet
add_C_cysteine=57.021464

# Specify a static modification to the residue D.
# option for Comet
add_D_aspartic_acid=0

# Specify a static modification to the residue E.
# option for Comet
add_E_glutamic_acid=0

# Specify a static modification to the residue F.
# option for Comet
add_F_phenylalanine=0

# Specify a static modification to the residue G.
# option for Comet
add_G_glycine=0

# Specify a static modification to the residue H.
# option for Comet
add_H_histidine=0

# Specify a static modification to the residue I.
# option for Comet
add_I_isoleucine=0

# Specify a static modification to the residue J.
# option for Comet
add_J_user_amino_acid=0

# Specify a static modification to the residue K.
# option for Comet
add_K_lysine=0

# Specify a static modification to the residue L.
# option for Comet
add_L_leucine=0

# Specify a static modification to the residue M.
# option for Comet
add_M_methionine=0

# Specify a static modification to the residue N.
# option for Comet
add_N_asparagine=0

# Specify a static modification to the residue O.
# option for Comet
add_O_ornithine=0

# Specify a static modification to the residue P.
# option for Comet
add_P_proline=0

# Specify a static modification to the residue Q.
# option for Comet
add_Q_glutamine=0

# Specify a static modification to the residue R.
# option for Comet
add_R_arginine=0

# Specify a static modification to the residue S.
# option for Comet
add_S_serine=0

# Specify a static modification to the residue T.
# option for Comet
add_T_threonine=0

# Specify a static modification to the residue U.
# option for Comet
add_U_user_amino_acid=0

# Specify a static modification to the residue V.
# option for Comet
add_V_valine=0

# Specify a static modification to the residue W.
# option for Comet
add_W_tryptophan=0

# Specify a static modification to the residue X.
# option for Comet
add_X_user_amino_acid=0

# Specify a static modification to the residue Y.
# option for Comet
add_Y_tyrosine=0

# Specify a static modification to the residue Z.
# option for Comet
add_Z_user_amino_acid=0

# Specifies the prefix of the protein names that indicates a decoy.
# Available for q-ranker and barista.
decoy_prefix=decoy_

#
# COMET_ENZYME_INFO _must_ be at the end of this parameters file
#
[COMET_ENZYME_INFO]
0.  No_enzyme                      0  -          -
1.  Trypsin                        1  KR         P
2.  Trypsin/P                      1  KR         -
3.  Lys_C                          1  K          P
4.  Lys_N                          0  K          -
5.  Arg_C                          1  R          P
6.  Asp_N                          0  D          -
7.  CNBr                           1  M          -
8.  Glu_C                          1  DE         P
9.  PepsinA                        1  FL         P
10. Chymotrypsin                   1  FWYL       P
